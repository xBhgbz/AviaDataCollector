# Generated by Django 4.2.14 on 2025-01-19 19:12

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, unique=True, verbose_name='Название')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания в БД')),
            ],
            options={
                'verbose_name': 'Компания',
                'verbose_name_plural': 'Компании',
            },
        ),
        migrations.CreateModel(
            name='Locality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, unique=True, verbose_name='Название')),
                ('latitude', models.CharField(blank=True, max_length=300, null=True, verbose_name='Широта: ')),
                ('longitude', models.CharField(blank=True, max_length=300, null=True, verbose_name='Долгота: ')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания в БД')),
            ],
            options={
                'verbose_name': 'Населенный пункт',
                'verbose_name_plural': 'Населенные пункты',
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tender_number', models.CharField(max_length=255, verbose_name='Идентификатор тендера')),
                ('site_url', models.CharField(max_length=300, verbose_name='Ссылка на сайт')),
                ('tender_info_link', models.CharField(max_length=1000, verbose_name='Ссылка на тендер')),
                ('price', models.FloatField(blank=True, null=True, verbose_name='Цена ₽')),
                ('conditions', models.JSONField(blank=True, null=True, verbose_name='Особые условия')),
                ('additional_services', models.JSONField(blank=True, null=True, verbose_name='Доп. улуги')),
                ('date_start', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('date_finish', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания в БД')),
                ('contractor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contractor_contracts', to='avia_transportation.company', verbose_name='Исполнитель')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_contracts', to='avia_transportation.company', verbose_name='Заказчик')),
            ],
            options={
                'verbose_name': 'Контракт',
                'verbose_name_plural': 'Контракты',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='AviaData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cargo', models.CharField(blank=True, max_length=300, null=True, verbose_name='Примечания по грузу')),
                ('distance', models.FloatField(blank=True, null=True, verbose_name='Общее расстояние км')),
                ('flight_hours_number', models.FloatField(blank=True, null=True, verbose_name='Количество летных часов')),
                ('aircraft_examples', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=300), blank=True, default=list, size=None, verbose_name='Примеры ВС')),
                ('aircraft_number', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Количество ВС')),
                ('cargo_volume', models.FloatField(blank=True, null=True, verbose_name='Объем груза кг, кол-во')),
                ('aircraft_type', models.CharField(blank=True, choices=[('helicopter', 'Вертолет'), ('plane', 'Самолет'), ('drone', 'Беспилотник')], null=True, verbose_name='Тип ВС')),
                ('drone_type', models.CharField(blank=True, choices=[('aerostatic', 'Аэростатические БПЛА'), ('reactive', 'Реактивные БПЛА'), ('fixed_wing', 'БПЛА самолётного типа'), ('rotary_wing', 'БПЛА вертолётного типа'), ('multirotor', 'Мультикоптерные (мультироторные) БПЛА'), ('hybrid', 'Гибридные БПЛА')], null=True, verbose_name='Тип БВС')),
                ('drone_payload', models.FloatField(blank=True, null=True, verbose_name='Полезная нагрузка БВС кг')),
                ('drone_service_type', models.CharField(blank=True, choices=[('service', 'Услуга'), ('purchase', 'Покупка')], null=True, verbose_name='Вид авиационного контракта БВС')),
                ('regularity_type', models.CharField(blank=True, choices=[('regular', 'Регулярный'), ('charter', 'Чартер')], null=True, verbose_name='Тип регулярности авиационного контракта')),
                ('work_type', models.CharField(blank=True, choices=[('freight', 'Грузоперевозки'), ('passenger', 'Пассажирские перевозки'), ('monitoring', 'Мониторинг'), ('agriculture', 'Сельхоз работы'), ('sanitary', 'Санитарный'), ('fire_fighting', 'Пожарный')], null=True, verbose_name='Тип работы')),
                ('number_flies', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания в БД')),
                ('arrival', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='arrival_avia_dats', to='avia_transportation.locality', verbose_name='Место прибытия')),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contract_avia_datas', to='avia_transportation.contract', verbose_name='Контракт')),
                ('departure', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='departure_avia_datas', to='avia_transportation.locality', verbose_name='Место отправления')),
            ],
            options={
                'verbose_name': 'Информация по авиационному контракту',
                'verbose_name_plural': 'Информация по авиационному контракту',
            },
        ),
        migrations.AddConstraint(
            model_name='contract',
            constraint=models.UniqueConstraint(fields=('tender_number', 'site_url'), name='unique_tender_site'),
        ),
        migrations.AddIndex(
            model_name='aviadata',
            index=models.Index(fields=['distance'], name='idx_distance'),
        ),
        migrations.AddIndex(
            model_name='aviadata',
            index=models.Index(fields=['flight_hours_number'], name='idx_flight_hours'),
        ),
    ]
