import os

BASE_DIR: str = os.path.dirname(os.path.abspath(__file__))
DOC_PATH: str = os.path.join(BASE_DIR, "files")
DOWNLOAD_PATH: str = os.path.join(DOC_PATH, "result.txt")

CHAT_URL: str = "https://duckduckgo.com/duckchat/v1/chat"
STATUS_URL: str = "https://duckduckgo.com/duckchat/v1/status"
DOC_SIZE_LIMIT: int = 40000

STATUS_HEADERS: dict = {
    "Accept": "*/*",
    "Accept-Encoding": "gzip, deflate, br, zstd",
    "Accept-Language": "ru,en;q=0.9",
    "Cache-Control": "no-store",
    "Cookie": "dcs=1; dcm=3",
    "Priority": "u=1, i",
    "Referer": "https://duckduckgo.com/",
    "Sec-Ch-Ua": '"Chromium";v="130", "YaBrowser";v="24.12", "Not?A_Brand";v="99", "Yowser";v="2.5"',
    "Sec-Ch-Ua-Mobile": "?0",
    "Sec-Ch-Ua-Platform": "Windows",
    "Sec-Fetch-Dest": "empty",
    "Sec-Detch-Mode": "cors",
    "Sec-Detch-Site": "same-origin",
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 YaBrowser/24.12.0.0 Safari/537.36",
    "X-Vqd-Accept": "1"
}

CHAT_HEADERS: dict = {
    "Accept": "text/event-stream",
    "Accept-encoding": "gzip, deflate, br, zstd",
    "Accept-language": "ru,en;q=0.9",
    "Content-length": "72",
    "Content-type": "application/json",
    "Cookie": "dcs=1; dcm=3",
    "Origin": "https://duckduckgo.com",
    "Priority": "u=1, i",
    "Referer": "https://duckduckgo.com/",
    "Sec-Ch-Ua": '"Chromium";v="130", "YaBrowser";v="24.12", "Not?A_Brand";v="99", "Yowser";v="2.5"',
    "Sec-Ch-Ua-Mobile": "?0",
    "Sec-Ch-Ua-Platform": "Windows",
    "Sec-Fetch-Dest": "empty",
    "Sec-Fetch-Mode": "cors",
    "Sec-Fetch-Site": "same-origin",
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 YaBrowser/24.12.0.0 Safari/537.36",
}

AVIA_PROMPT = """Тебе нужно получить информацию о всех перелётах воздушных средств, которые есть в контракте.
Перелётом считай конкретный маршрут из пункта А в пункт Б, который может состоять из нескольких пунктов. Если есть одинаковый маршрут для разных транспортных средств, то считай это разными маршрутами.
Если у маршрута нет точного пункта вылета и пункта назначения, то вместо названия пункта вылета укажи название области, где проходит авиаперевозка.
Json массив маршрутов должен содержать все маршруты из текста. Каждый маршрут должен быть json объектом и содержать следующие поля:
1. Все пункты маршрута в порядке следования от начала до конца. Это должен быть json массив, находящийся в объекте маршрута по ключу route. Каждый пункт состоит из 3 полей name - название пункта, longtitude - долгота в формате десятичного числа со знаком, latitude - широта в том же формате. Если точный маршрут не указан, но он проходит в какой-то области, то напиши в name название области. Если маршрута нет, то оставь пустой json массив [].
2. Структура груза: нет груза, пассажиры, ящики, бочки - то, что должно перевозить воздушное судно. Если груза нет оставь null. Это строка по json ключу cargo.
3. Объём груза. В килограммах для груза и персонах для людей. Если груза нет оставь null. Это число по json ключу cargo_volume.
4. Тип работ. Одно из списка: "Грузоперевозки", "Пассажирские перевозки", "Мониторинг", "Сельхоз работы", "Санитарный", "Пожарный". Это строка по json ключу work_type. Если не указано и непонятно из контекста, то ставь null.
5. Примеры подходящих для выполнения перелёта воздушных средств, если они указаны в контракте. Это массив строк в json по ключу aircraft_examples. Если примеров нет укажи пустой json массив [].
6. Количество воздушных средств необходимых на данной авиаперевозке. Только если указано в контракте, иначе null. Это число в json по ключу aircraft_number.
7. Суммарное количество лётных часов на маршруте. Если не указано ставь null. Это число в json по ключу flight_hours.
8. Суммарный налёт на данном маршруте в км. Если не указано ставь null. Это число в json по ключу distance.
9. Тип воздушного судна на данном маршруте. Одно из списка: "Вертолет", "Самолет", "Беспилотник". Это строка в json по ключу aircraft_type. Если не указано и непонятно из контекста, то ставь null.
10. Регулярность полётов воздушного по этому маршруту. "Чартер" - если это несколько перелётов или "Регулярный", если воздушное судно будет регулярно летать по данному маршруту. Это строка в json по ключу regularity_type. Если не указано и непонятно из контекста, то ставь null.
11. Суммарнок количество рейсов по данному маршруту. В json по ключу number_flies.
Для беспилотных воздушных судов дополнительно укажи, если их не встретишь указывай null:
12. Масса полезной нагрузки для БВС, если указана в требованиях для воздушного судна. Если не указана, ставь null. В json по ключу drone_payload.
13. Тип БВС: "Аэростатические", "Реактивные", "Cамолётного типа", "Вертолётного типа", "Мультикоптерные", "Гибридные". Если в рейсе не участвуют БВС или тип БВС не указан и не понятен из контекста, то ставь null. Это строка в json по ключу "drone_type".
14. Тип услуги для БВС: "Услуга", "Покупка". Это строка в json по ключу "drone_service_type".
Текст документа будет в следующих сообщениях. 
Если ты не найдёшь ни одной авиаперевозки в ответ выведи пустой массив json: "[]".
"""

CONTRACT_PROMT = """Из контракта, который я тебе прислал выше извлеки следующую информацию обо всём контракте, связанную с воздушными суднами.
Информация о контракте, которую ты должен получить:
1. Дата начала контракта в формате "YYYY-MM-DD". В json должен быть по ключу date_start.
2. Дата конца контракта в формате "YYYY-MM-DD". В json должен быть по ключу date_dinish.
3. Особые условия контракта. Это будет отдельный json объект по ключу conditions. В нём будут 2 поля, которые будут массивами строк:
3.1 Поле "weather_conditions" - особые погодные условия. Это особые погодные условия, относящиеся к окружающей среде в которой будет летать воздушное судно, которые выдвигает заказчик. Это должен быть json массив. Если дополнительных условий нет, то оставляю пустой json массив [].
3.2 Поле "equipment_conditions" - существенные требования предъявляемые к конструкции и оборудованию воздушного средства, которое будет предоставлено в рамках контракта. Если дополнительных условий нет, то оставляю пустой json массив [].
4. Дополнительные услуги. Это услуги не связанные с персоналом, техническим обслуживанием, отчётами исполнителя и персоналом. Эти услуги должны быть связаны с воздушным судном или являться последствием авиаперелета. Это должен быть json массив. Он должен быть по ключу additional_services. Если дополнительных услуг нет, то оставляю пустой json массив [].
5. Полное название компании исполнителя контракта. Если не указано, то ставь null. В json должен быть по ключу contractor.
В ответ на это сообщение выведи только json.
Если ты не можешь дать ответ исходя из контракта выведи пустой json: "{}".
"""